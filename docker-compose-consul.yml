services:
  consul-server:
    image: "consul:1.15"
    container_name: consul-server
    ports:
      - "8500:8500"   # UI и HTTP API
      - "8600:8600/udp" # DNS
      - "8300:8300"   # Server RPC
      - "8301:8301"   # Serf LAN
      - "8302:8302"   # Serf WAN
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0 -bind=0.0.0.0
    volumes:
      - "consul_data:/consul/data"
    networks:
      - bank-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 30s
      timeout: 10s
      retries: 5

#  config-server:
#    build:
#      context: .
#      dockerfile: config-server/Dockerfile
#    container_name: config-server
#    ports:
#      - "8888:8888"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_CLOUD_CONSUL_HOST=consul-server
#    depends_on:
#      - consul-server
#    networks:
#      - bank-network

  api-gateway:
    build:
      context: ./api-gateway-server
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONSUL_HOST: consul-server
    depends_on:
      - consul-server
    networks:
      - bank-network

#  discovery-server:
#    build:
#      context: ./discovery-server
#      dockerfile: Dockerfile
#    container_name: discovery-server
#    ports:
#      - "8761:8761" # Для совместимости, если какие-то клиенты ожидают порт 8761
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_CLOUD_CONSUL_HOST=consul-server
#    depends_on:
#      consul-server:
#        condition: service_healthy
##      - config-server
#    networks:
#      - bank-network

  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    container_name: account-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONSUL_HOST: consul-server
    depends_on:
      - consul-server
      - account-db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bank-network

  account-db:
    image: "postgres:15"
    container_name: postgres
    environment:
      POSTGRES_DB: account_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - account_data:/var/lib/postgresql/data
    networks:
      - bank-network


  #  auth-service:
#    build:
#      context: ./auth-service
#      dockerfile: Dockerfile
#    container_name: auth-service
#    ports:
#      - "8083:8083"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_CLOUD_CONSUL_HOST=consul-server
#      - JWT_SECRET=super-secret-jwt-key
#    depends_on:
#      - consul-server
#      - account-service
#    networks:
#      - bank-network

  front-ui-service:
    build:
      context: ./front-ui-service
      dockerfile: Dockerfile
    container_name: front-ui-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      SPRING_CLOUD_CONSUL_HOST: "consul-server"
    depends_on:
      - consul-server
      - api-gateway
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bank-network

  blocker-service:
    build:
      context: ./blocker-service
      dockerfile: Dockerfile
    container_name: blocker-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONSUL_HOST: consul-server
    depends_on:
      - consul-server
      - blocker-db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bank-network

  blocker-db:
    image: "postgres:15"
    container_name: blocker-db
    environment:
      POSTGRES_DB: blocker_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - blocker_data:/var/lib/postgresql/data
      - ./blocker-service/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - bank-network

  cash-service:
    build:
      context: ./cash-service
      dockerfile: Dockerfile
    container_name: cash-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONSUL_HOST: consul-server
    depends_on:
      - consul-server
      - cash-db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bank-network

  cash-db:
    image: "postgres:15"
    container_name: cash-db
    environment:
      POSTGRES_DB: cash_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - cash_data:/var/lib/postgresql/data
    networks:
      - bank-network

  transfer-service:
    build:
      context: ./transfer-service
      dockerfile: Dockerfile
    container_name: transfer-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONSUL_HOST: consul-server
    depends_on:
      - consul-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - bank-network

networks:
  bank-network:
    driver: bridge

volumes:
  consul_data:
  account_data:
  blocker_data:
  cash_data: