spring:
  profiles:
    active: prod
  cloud:
    consul:
      host: consul-server
      port: 8500
      discovery:
        instance-id: ${spring.application.name}:${random.uuid}
        service-name: ${spring.application.name}
        prefer-ip-address: true
        health-check-path: /actuator/health
        health-check-interval: 15s
        register: true

  r2dbc:
    url: r2dbc:postgresql://blocker-db:5432/blocker_service
    username: postgres
    password: postgres
    pool:
      enabled: true
      initial-size: 10
      max-size: 50
      max-idle-time: 30m
      max-life-time: 60m
      validation-query: SELECT 1

  main:
    web-application-type: reactive

server:
  port: 8086

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics

logging:
  level:
    org.springframework: INFO
    ru.practicum: INFO
    org.springframework.cloud.consul: INFO
  pattern:
    console: "%d{dd-MM-yyyy HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Настройки блокировщика
#blocker:
#  frequency-threshold: 5
#  risk-threshold: 150
#  duplicate-risk-score: 100
#  amount-anomaly-risk-score: 80
#  unusual-time-risk-score: 70
#  high-frequency-risk-score: 90
#  blocked-history-risk-score: 50