server:
  port: 8080

spring:
  application:
    name: api-gateway-server
  cloud:
    consul:
      host: consul-server
      port: 8500
      #      config:
      #        enabled: false
      discovery:
        instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
        service-name: ${spring.application.name}
        prefer-ip-address: true
        health-check-path: /actuator/health
        health-check-interval: 15s
        register: true
        enabled: true
    gateway:
      discovery:
        locator:
          enabled: true # Автоматическое создание маршрутов по именам сервисов
          lower-case-service-id: true
      routes:
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/account-service/**
          filters:
            - StripPrefix=1

        - id: blocker-service
          uri: lb://blocker-service
          predicates:
            - Path=/blocker-service/**
          filters:
            - StripPrefix=1

        - id: cash-service
          uri: lb://cash-service
          predicates:
            - Path=/cash-service/**
          filters:
            - StripPrefix=1

        - id: exchange-generator-service
          uri: lb://exchange-generator-service
          predicates:
            - Path=/exchange-generator-service/**
          filters:
            - StripPrefix=1

        - id: exchange-service
          uri: lb://exchange-service
          predicates:
            - Path=/exchange-service/**
          filters:
            - StripPrefix=1

#        - id: front-ui-service
#          uri: lb://front-ui-service
#          predicates:
#            - Path=/front-ui-service/**
#          filters:
#            - StripPrefix=1

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/notification-service/**
          filters:
            - StripPrefix=1

        - id: serv-auth-service
          uri: lb://serv-auth-service
          predicates:
            - Path=/serv-auth-service/**
          filters:
            - StripPrefix=1

        - id: transfer-service
          uri: lb://transfer-service
          predicates:
            - Path=/transfer-service/**
          filters:
            - StripPrefix=1

        - id: user-auth-service
          uri: lb://user-auth-service
          predicates:
            - Path=/user-auth-service/**
          filters:
            - StripPrefix=1

        # Health check endpoint для gateway
        - id: gateway-health
          uri: http://localhost:${server.port}
          predicates:
            - Path=/actuator/health

      # Глобальная конфигурация для всех маршрутов
      httpclient:
        connect-timeout: 5000
        response-timeout: 10s



management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.consul: INFO
